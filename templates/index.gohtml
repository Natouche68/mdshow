<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>MDShow</title>
		<style>
			@import url("{{ .Theme.FontImportURL }}");

			body {
				overflow: hidden;
				margin: 0;
				padding: 0;
				font-family: "{{ .Theme.TextFontFamily}}", sans-serif;
				font-size: 1.4rem;
				background-color: {{ .Theme.BackgroundColor }};
				color: {{ .Theme.TextColor }};
			}

			.slide {
				display: none;
				box-sizing: border-box;
				position: absolute;
				top: 0;
				left: 0;
				width: 100vw;
				height: 100vh;
				margin: 0;
				padding: 4rem 8rem;
				opacity: 0;
			}

			h1,
			h2,
			h3,
			h4,
			h5,
			h6 {
				font-family: "{{ .Theme.TitleFontFamily }}", sans-serif;
				text-decoration: {{ if .Theme.HUnderlined }}underline{{ else }}none{{ end }};
			}

			h1 {
				margin-top: 4rem;
				font-size: 5rem;
				font-weight: {{ .Theme.H1Weight }};
				color: {{ .Theme.H1Color }};
			}

			h2 {
				margin: 1rem 0;
				color: {{ .Theme.H2Color }};
				font-size: 3rem;
				font-weight: {{ .Theme.H2Weight }};
			}

			h3 {
				margin: 1rem 0;
				color: {{ .Theme.H3Color }};
				font-size: 2.8rem;
				font-weight: {{ .Theme.H3Weight }};
			}

			h4 {
				margin: 1rem 0;
				color: {{ .Theme.H4Color }};
				font-size: 2.4rem;
				font-weight: {{ .Theme.H4Weight }};
			}

			h5 {
				margin: 1rem 0;
				color: {{ .Theme.H5Color }};
				font-size: 2rem;
				font-weight: {{ .Theme.H5Weight }};
			}

			h6 {
				margin: 1rem 0;
				color: {{ .Theme.H6Color }};
				font-size: 2rem;
				font-weight: {{ .Theme.H6Weight }};
			}

			del {
				color: {{ .Theme.DelColor }};
			}

			strong {
				color: {{ .Theme.StrongColor }};
			}

			a {
				font-weight: {{ .Theme.LinkWeight }};
				color: {{ .Theme.LinkColor }};
				text-decoration: underline;
			}

			p:has(img):only-child {
				text-align: center;
			}

			p:has(img):not(:only-child) {
				float: right;
			}
			p:has(img):not(:only-child) img {
				max-width: 40vw;
			}

			table {
				width: 100%;
				border-collapse: collapse;
			}

			tr {
				background: {{ .Theme.TableBackground1 }};
			}

			tr:nth-of-type(even),
			thead tr {
				background: {{ .Theme.TableBackground2 }};
			}

			th {
				font-weight: {{ .Theme.TableTitleWeight }};
				font-family: "{{ .Theme.TitleFontFamily }}", sans-serif;
				color: {{ .Theme.TableTitleColor }};
			}

			th,
			td {
				text-align: center;
				padding: 0.5rem;
			}

			code {
				padding: 0.2rem 0.5rem;
				font-family: "{{ .Theme.CodeFontFamily }}", monospace;
				color: {{ .Theme.CodeColor }};
				background: {{ .Theme.CodeBackground }};
				border-radius: 0.5rem;
			}

			pre code {
				padding: 0;
			}

			pre {
				padding: 1rem;
				background: {{ .Theme.CodeBackground }} !important;
				border-radius: 0.5rem;
			}

			.buttons {
				position: fixed;
				bottom: 1rem;
				right: 1rem;
			}

			button {
				font-family: "{{ .Theme.TextFontFamily }}", sans-serif;
				font-size: 2rem;
				font-weight: 700;
				color: {{ .Theme.ArrowColor }};
				background-color: transparent;
				border: none;
				cursor: pointer;
				padding: 1rem;
			}

			.progress {
				position: fixed;
				bottom: 0;
				left: 0;
				height: 4px;
				width: calc(100vw * var(--progress));
				background: {{ .Theme.ProgressBarColor }};
				transition: width 0.4s ease;
			}
		</style>
		{{ .CodeBlocksCSS }}
	</head>
	<body style="--progress: 0">
		<div class="slide">
			{{ .Content }}
		</div>

		<div class="buttons">
			<button id="previous"><</button>
			<button id="next">></button>
		</div>
		<div class="progress"></div>

		<script
			async
			src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
		></script>
		<script>
			const slides = document.getElementsByClassName("slide");
			const slideNumber = slides.length;
			const previousButton = document.getElementById("previous");
			const nextButton = document.getElementById("next");
			let currentSlide = 0;

			function disappearOldSlide() {
				slides[currentSlide].style.display = "none";
				slides[currentSlide].style.opacity = 0;
			}

			function updateSlide() {
				document.body.style.setProperty(
					"--progress",
					(currentSlide + 1) / slideNumber
				);
				slides[currentSlide].style.display = "block";
				slides[currentSlide].animate([{ opacity: 0 }, { opacity: 1 }], {
					duration: 400,
					fill: "forwards",
				});
			}
			updateSlide();

			function nextSlide() {
				disappearOldSlide();
				currentSlide = (currentSlide + 1) % slideNumber;
				updateSlide();
			}

			function previousSlide() {
				disappearOldSlide();
				currentSlide = (currentSlide - 1 + slideNumber) % slideNumber;
				updateSlide();
			}

			previousButton.addEventListener("click", previousSlide);
			nextButton.addEventListener("click", nextSlide);

			document.addEventListener("keydown", function (e) {
				if (e.key === "ArrowLeft") {
					previousSlide();
				} else if (e.key === "ArrowRight" || e.key === " ") {
					nextSlide();
				}
			});
		</script>
	</body>
</html>
